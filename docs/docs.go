// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "Return all metrics value",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "Get metrics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Checking connection to repository",
                "tags": [
                    "Info"
                ],
                "summary": "Ping repository",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/update/": {
            "post": {
                "description": "Saves metric in repository",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "Saves metric",
                "parameters": [
                    {
                        "description": "Metric to save",
                        "name": "metric",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/metricscollectionentity.Metrics"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Not Implemented",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/update/{TYPE}/{NAME}/{VALUE}": {
            "post": {
                "description": "Saves any metrics",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "Save metric",
                "parameters": [
                    {
                        "enum": [
                            "counter",
                            "gauge"
                        ],
                        "type": "string",
                        "description": "metric type",
                        "name": "TYPE",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "metric id",
                        "name": "NAME",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "metric value",
                        "name": "VALUE",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Not Implemented",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/updates/": {
            "post": {
                "description": "Saves batch metrics in repository",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "Saves metrics",
                "parameters": [
                    {
                        "description": "List of metrics to save",
                        "name": "metrics",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/metricscollectionentity.Metrics"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Not Implemented",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/value/": {
            "post": {
                "description": "Return metric value",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "Get metric",
                "parameters": [
                    {
                        "description": "Get Metric",
                        "name": "metrics",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/metricscollectionentity.Metrics"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Not Implemented",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/value/{TYPE}/{NAME}": {
            "get": {
                "description": "Return metric value",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "Get metric",
                "parameters": [
                    {
                        "enum": [
                            "counter",
                            "gauge"
                        ],
                        "type": "string",
                        "description": "metric type",
                        "name": "TYPE",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "metric id",
                        "name": "NAME",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Not Implemented",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "metricscollectionentity.Metrics": {
            "type": "object",
            "properties": {
                "delta": {
                    "description": "значение метрики в случае передачи counter",
                    "type": "integer"
                },
                "hash": {
                    "description": "значение хеш-функции",
                    "type": "string"
                },
                "id": {
                    "description": "имя метрики",
                    "type": "string"
                },
                "type": {
                    "description": "параметр, принимающий значение gauge или counter",
                    "type": "string"
                },
                "value": {
                    "description": "значение метрики в случае передачи gauge",
                    "type": "number"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Monitoring API",
	Description:      "Service for saving metrics and providing read access to them",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
